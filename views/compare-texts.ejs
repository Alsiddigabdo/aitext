<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>مقارنة النصوص | محلل النصوص الذكي</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900&family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#F5F3FF',
                            100: '#EDE9FE',
                            200: '#DDD6FE',
                            300: '#C4B5FD',
                            400: '#A78BFA',
                            500: '#8B5CF6',
                            600: '#7C3AED',
                            700: '#6D28D9',
                            800: '#5B21B6',
                            900: '#4C1D95'
                        },
                        accent: {
                            50: '#FFFBEB',
                            100: '#FEF3C7',
                            200: '#FDE68A',
                            300: '#FCD34D',
                            400: '#FBBF24',
                            500: '#F59E0B',
                            600: '#D97706',
                            700: '#B45309',
                            800: '#92400E',
                            900: '#78350F'
                        },
                        dark: {
                            50: '#F8FAFC',
                            100: '#F1F5F9',
                            200: '#E2E8F0',
                            300: '#CBD5E1',
                            400: '#94A3B8',
                            500: '#64748B',
                            600: '#475569',
                            700: '#334155',
                            800: '#1E293B',
                            900: '#0F172A'
                        }
                    },
                    borderRadius: {
                        '4xl': '2rem',
                        '5xl': '3rem'
                    },
                    boxShadow: {
                        '3d': '0 15px 30px -5px rgba(0, 0, 0, 0.3)',
                        'neumorphic': '8px 8px 16px #0d1321, -8px -8px 16px #131d31',
                        'neumorphic-inset': 'inset 5px 5px 10px #0d1321, inset -5px -5px 10px #131d31',
                        'glow': '0 0 15px rgba(139, 92, 246, 0.5)',
                        'glow-accent': '0 0 15px rgba(245, 158, 11, 0.5)'
                    },
                    animation: {
                        'float': 'float 6s ease-in-out infinite',
                        'pulse-slow': 'pulse 6s infinite',
                        'wave': 'wave 2.5s infinite'
                    }
                },
                fontFamily: {
                    'cairo': ['Cairo', 'sans-serif'],
                    'tajawal': ['Tajawal', 'sans-serif']
                }
            }
        }
    </script>
    <style>
        :root {
            --primary: #7C3AED;
            --primary-light: #8B5CF6;
            --accent: #F59E0B;
            --dark: #0F172A;
            --darker: #0A1120;
        }
        
        body {
            font-family: 'Cairo', 'Tajawal', sans-serif;
            background: linear-gradient(135deg, var(--darker), var(--dark));
            color: #E2E8F0;
            scroll-behavior: smooth;
        }
        
        .neu-card {
            background: linear-gradient(145deg, #0e1424, #101829);
            border-radius: 20px;
            box-shadow: 8px 8px 16px #0a0f1a, -8px -8px 16px #121f3a;
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .neu-card:hover {
            transform: translateY(-5px);
            box-shadow: 12px 12px 24px #0a0f1a, -12px -12px 24px #121f3a;
        }
        
        .gradient-text {
            background: linear-gradient(90deg, var(--primary-light), var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, var(--primary), var(--primary-light));
        }
        
        .btn-hover-effect {
            position: relative;
            overflow: hidden;
        }
        
        .btn-hover-effect::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                rgba(255, 255, 255, 0) 45%,
                rgba(255, 255, 255, 0.1) 50%,
                rgba(255, 255, 255, 0) 55%
            );
            transform: rotate(30deg);
            transition: all 0.3s ease;
        }
        
        .btn-hover-effect:hover::after {
            left: 100%;
            top: 100%;
        }
        
        .animate-fade-up {
            animation: fadeUp 0.8s ease-out forwards;
        }
        
        @keyframes fadeUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .animate-delay-100 {
            animation-delay: 0.1s;
        }
        
        .animate-delay-200 {
            animation-delay: 0.2s;
        }
        
        .animate-delay-300 {
            animation-delay: 0.3s;
        }
        
        .diff-added {
            background: rgba(34, 197, 94, 0.15);
            color: #bbf7d0;
            padding: 2px 4px;
            border-radius: 4px;
        }
        
        .diff-removed {
            background: rgba(239, 68, 68, 0.15);
            color: #fecaca;
            text-decoration: line-through;
            padding: 2px 4px;
            border-radius: 4px;
        }
        
        .diff-unchanged {
            color: #d1d5db;
        }
        
        .diff-changed {
            background: rgba(234, 179, 8, 0.15);
            color: #fef08a;
            padding: 2px 4px;
            border-radius: 4px;
        }
        
        .stat-card {
            transition: all 0.3s ease;
            background: linear-gradient(145deg, #101829, #0e1424);
            box-shadow: 5px 5px 10px #0a0f1a, -5px -5px 10px #121f3a;
        }
        
        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }
        
        .tool-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(145deg, #101829, #0e1424);
            box-shadow: 5px 5px 10px #0a0f1a, -5px -5px 10px #121f3a;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            color: var(--primary-light);
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col">
    <%- include('partials/navbar') %>

    <!-- Main Content -->
    <main class="mt-20 flex-grow">
        <section class="py-12 md:py-16">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12 animate-fade-up">
                    <span class="inline-block px-4 py-1.5 rounded-full bg-primary/10 text-primary text-sm font-medium mb-4">أدوات متقدمة</span>
                    <h1 class="text-3xl md:text-4xl font-bold mb-4 gradient-text">مقارنة النصوص الذكية</h1>
                    <p class="text-lg text-gray-300 max-w-2xl mx-auto">قارن بين نصين بسهولة مع تحليل دقيق للفروقات باستخدام الذكاء الاصطناعي</p>
                </div>

                <div class="neu-card p-6 rounded-xl mb-8 animate-fade-up animate-delay-100">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <!-- Original Text -->
                        <div>
                            <div class="flex items-center justify-between mb-4">
                                <h2 class="font-medium text-lg flex items-center text-gray-200">
                                    <i class="ri-file-text-line ml-2 text-primary"></i>
                                    النص الأصلي
                                </h2>
                                <button onclick="clearText('original-text')" class="text-sm text-gray-400 hover:text-primary transition flex items-center">
                                    <i class="ri-eraser-line ml-1"></i> مسح
                                </button>
                            </div>
                            <textarea id="original-text" class="w-full p-4 rounded-lg bg-gray-800/50 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-white" placeholder="أدخل النص الأصلي هنا..."></textarea>
                            <div class="text-sm text-gray-400 mt-2">عدد الكلمات: <span id="original-count" class="text-white">0</span></div>
                        </div>
                        
                        <!-- New Text -->
                        <div>
                            <div class="flex items-center justify-between mb-4">
                                <h2 class="font-medium text-lg flex items-center text-gray-200">
                                    <i class="ri-edit-2-line ml-2 text-accent"></i>
                                    النص المعدل
                                </h2>
                                <button onclick="clearText('new-text')" class="text-sm text-gray-400 hover:text-primary transition flex items-center">
                                    <i class="ri-eraser-line ml-1"></i> مسح
                                </button>
                            </div>
                            <textarea id="new-text" class="w-full p-4 rounded-lg bg-gray-800/50 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary text-white" placeholder="أدخل النص المعدل هنا..."></textarea>
                            <div class="text-sm text-gray-400 mt-2">عدد الكلمات: <span id="new-count" class="text-white">0</span></div>
                        </div>
                    </div>
                    
                    <!-- Action Buttons -->
                    <div class="flex flex-col sm:flex-row justify-center gap-4 mt-8">
                        <button id="compare-btn" class="px-6 py-3 rounded-lg btn-hover-effect gradient-bg text-white font-medium shadow-glow hover:shadow-glow-accent transition-all duration-300 flex items-center justify-center" disabled>
                            <i class="ri-compare-line ml-2"></i> مقارنة النصوص
                        </button>
                        <button id="swap-btn" class="px-6 py-3 rounded-lg neu-btn text-white hover:bg-gray-700 transition flex items-center justify-center">
                            <i class="ri-swap-line ml-2"></i> تبديل النصوص
                        </button>
                        <button id="reset-btn" class="px-6 py-3 rounded-lg neu-btn text-white hover:bg-gray-700 transition flex items-center justify-center hidden">
                            <i class="ri-eraser-line ml-2"></i> إعادة تعيين
                        </button>
                    </div>
                </div>

                <!-- Comparison Results -->
                <div id="comparison-results" class="neu-card p-6 rounded-xl hidden animate-fade-up">
                    <h2 class="text-xl font-bold mb-6 flex items-center text-gray-200">
                        <i class="ri-bar-chart-line ml-2 text-primary"></i> نتائج المقارنة
                    </h2>
                    
                    <div class="grid grid-cols-2 md:grid-cols-5 gap-4 mb-6">
                        <div class="stat-card p-4 rounded-lg">
                            <div class="text-sm text-gray-400 mb-1">نسبة التشابه</div>
                            <div class="text-xl font-bold text-primary" id="similarity">--%</div>
                        </div>
                        <div class="stat-card p-4 rounded-lg">
                            <div class="text-sm text-gray-400 mb-1">الإضافات</div>
                            <div class="text-xl font-bold text-green-400" id="added">0</div>
                        </div>
                        <div class="stat-card p-4 rounded-lg">
                            <div class="text-sm text-gray-400 mb-1">الحذف</div>
                            <div class="text-xl font-bold text-red-400" id="removed">0</div>
                        </div>
                        <div class="stat-card p-4 rounded-lg">
                            <div class="text-sm text-gray-400 mb-1">التغييرات</div>
                            <div class="text-xl font-bold text-yellow-400" id="changed">0</div>
                        </div>
                        <div class="stat-card p-4 rounded-lg">
                            <div class="text-sm text-gray-400 mb-1">غير متغير</div>
                            <div class="text-xl font-bold text-blue-400" id="unchanged">0</div>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <!-- Improvement Analysis -->
                        <div class="neu-card p-4 rounded-lg">
                            <h3 class="font-medium mb-3 flex items-center text-gray-200">
                                <i class="ri-lightbulb-flash-line ml-2 text-accent"></i>
                                تحليل التحسينات
                            </h3>
                            <div id="improvement-text" class="text-sm text-gray-300">سيتم عرض تحليل التحسينات هنا بعد المقارنة.</div>
                        </div>
                        
                        <!-- Visual Diff -->
                        <div class="neu-card p-4 rounded-lg">
                            <h3 class="font-medium mb-3 flex items-center text-gray-200">
                                <i class="ri-eye-line ml-2 text-primary"></i>
                                الفروقات البصرية
                            </h3>
                            <div id="visual-diff" class="text-sm bg-gray-900/50 p-3 rounded-lg max-h-80 overflow-y-auto"></div>
                        </div>
                    </div>
                </div>

                <!-- Additional Tools Section -->
                <div class="mt-16">
                    <h2 class="text-2xl font-bold mb-8 text-center gradient-text">أدوات أخرى قد تهمك</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                        <a href="/analyzer" class="neu-card p-6 rounded-xl hover:border-primary/50 transition flex flex-col items-center text-center">
                            <div class="tool-icon">
                                <i class="ri-file-search-line"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-3 text-white">تحليل النصوص</h3>
                            <p class="text-gray-400">تحليل شامل للأسلوب والوضوح والجودة اللغوية</p>
                        </a>
                        
                        <a href="/text-summarization" class="neu-card p-6 rounded-xl hover:border-primary/50 transition flex flex-col items-center text-center">
                            <div class="tool-icon">
                                <i class="ri-file-reduce-line"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-3 text-white">تلخيص النصوص</h3>
                            <p class="text-gray-400">استخلاص أهم المعلومات والتفاصيل الرئيسية</p>
                        </a>
                        
                        <a href="/smart-translation" class="neu-card p-6 rounded-xl hover:border-primary/50 transition flex flex-col items-center text-center">
                            <div class="tool-icon">
                                <i class="ri-translate-2"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-3 text-white">الترجمة الذكية</h3>
                            <p class="text-gray-400">ترجمة احترافية بأسلوب طبيعي وحفظ السياق</p>
                        </a>
                        
                        <a href="/suggest-titles" class="neu-card p-6 rounded-xl hover:border-primary/50 transition flex flex-col items-center text-center">
                            <div class="tool-icon">
                                <i class="ri-text"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-3 text-white">اقتراح العناوين</h3>
                            <p class="text-gray-400">عناوين جذابة لمحتواك تزيد من التفاعل</p>
                        </a>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <%- include('partials/footer') %>

    <script>
        // DOM Elements
        const originalText = document.getElementById('original-text');
        const newText = document.getElementById('new-text');
        const resetBtn = document.getElementById('reset-btn');
        const compareBtn = document.getElementById('compare-btn');
        const swapBtn = document.getElementById('swap-btn');
        const comparisonResults = document.getElementById('comparison-results');
        const similarityEl = document.getElementById('similarity');
        const addedEl = document.getElementById('added');
        const removedEl = document.getElementById('removed');
        const changedEl = document.getElementById('changed');
        const unchangedEl = document.getElementById('unchanged');
        const improvementText = document.getElementById('improvement-text');
        const visualDiff = document.getElementById('visual-diff');
        const originalCount = document.getElementById('original-count');
        const newCount = document.getElementById('new-count');

        // Update button states and word counts
        function updateButtonStates() {
            const originalWords = originalText.value.trim() ? originalText.value.split(/\s+/).length : 0;
            const newWords = newText.value.trim() ? newText.value.split(/\s+/).length : 0;
            originalCount.textContent = originalWords;
            newCount.textContent = newWords;

            const hasText = originalText.value || newText.value;
            resetBtn.classList.toggle('hidden', !hasText);
            compareBtn.disabled = !originalText.value.trim() || !newText.value.trim();
        }

        // Clear text function
        function clearText(textAreaId) {
            document.getElementById(textAreaId).value = '';
            updateButtonStates();
        }

        // Swap texts function
        function swapTexts() {
            const temp = originalText.value;
            originalText.value = newText.value;
            newText.value = temp;
            updateButtonStates();
        }

        // Compare texts function with error handling
        async function compareTexts() {
            if (!originalText.value.trim() || !newText.value.trim()) {
                alert('حقول فارغة: يرجى إدخال النص الأصلي والنص الجديد للمقارنة');
                return;
            }

            compareBtn.disabled = true;
            compareBtn.innerHTML = '<span class="inline-block h-4 w-4 border-2 border-white/20 border-t-white rounded-full animate-spin mr-2"></span>جاري المقارنة...';

            try {
                // Simulate API call (replace with actual API call)
                await new Promise(resolve => setTimeout(resolve, 1000));
                
                // Mock data (replace with actual API response)
                const mockData = {
                    similarity: Math.floor(Math.random() * 100),
                    added: Math.floor(Math.random() * 10),
                    removed: Math.floor(Math.random() * 10),
                    changed: Math.floor(Math.random() * 10),
                    unchanged: Math.floor(Math.random() * 20),
                    improvementText: generateImprovementText()
                };

                // Update UI with mock data
                similarityEl.textContent = `${mockData.similarity}%`;
                addedEl.textContent = mockData.added;
                removedEl.textContent = mockData.removed;
                changedEl.textContent = mockData.changed;
                unchangedEl.textContent = mockData.unchanged;
                improvementText.textContent = mockData.improvementText;
                visualDiff.innerHTML = generateSimpleVisualDiff(originalText.value, newText.value);

                comparisonResults.classList.remove('hidden');
                
                // إضافة المؤقت بعد النجاح
                let timeLeft = 20;
                compareBtn.innerHTML = `الرجاء الانتظار (${timeLeft} ث)`;
                compareBtn.classList.add('disabled:bg-gray-600');

                const countdown = setInterval(() => {
                    timeLeft--;
                    compareBtn.innerHTML = `الرجاء الانتظار (${timeLeft} ث)`;
                    if (timeLeft <= 0) {
                        clearInterval(countdown);
                        compareBtn.disabled = false;
                        compareBtn.innerHTML = '<i class="ri-compare-line ml-2"></i> مقارنة النصوص';
                        compareBtn.classList.remove('disabled:bg-gray-600');
                        updateButtonStates();
                    }
                }, 1000);
            } catch (error) {
                console.error('Error in compareTexts:', error);
                alert(`خطأ: ${error.message}`);
                compareBtn.disabled = false;
                compareBtn.innerHTML = '<i class="ri-compare-line ml-2"></i> مقارنة النصوص';
                updateButtonStates();
            }
        }

        // Generate mock improvement text
        function generateImprovementText() {
            const improvements = [
                "تحسن في الوضوح والترتيب المنطقي للجمل",
                "تحسين في بناء الجملة والقواعد النحوية",
                "إضافة معلومات جديدة قيمة للنص",
                "تحسين في تسلسل الأفكار والمحتوى",
                "إزالة معلومات زائدة أو غير ضرورية",
                "تحسين في استخدام المصطلحات التقنية"
            ];
            return improvements[Math.floor(Math.random() * improvements.length)];
        }

        // Simple visual diff function (client-side)
        function generateSimpleVisualDiff(original, newText) {
            const originalLines = original.split('\n');
            const newLines = newText.split('\n');
            let diffHTML = '';
            const maxLines = Math.max(originalLines.length, newLines.length);

            for (let i = 0; i < maxLines; i++) {
                const origLine = originalLines[i] || '';
                const newLine = newLines[i] || '';
                
                if (origLine === newLine) {
                    diffHTML += `<div class="diff-unchanged mb-2">${origLine || ' '}</div>`;
                } else if (origLine && !newLine) {
                    diffHTML += `<div class="diff-removed mb-2">${origLine}</div>`;
                } else if (!origLine && newLine) {
                    diffHTML += `<div class="diff-added mb-2">${newLine}</div>`;
                } else {
                    diffHTML += `<div class="flex flex-col gap-1 mb-2">
                        <div class="diff-removed">${origLine}</div>
                        <div class="diff-added">${newLine}</div>
                    </div>`;
                }
            }
            return diffHTML || '<p class="text-gray-400 text-center py-4">لا توجد فروقات واضحة بين النصين</p>';
        }

        // Event listeners
        originalText.addEventListener('input', updateButtonStates);
        newText.addEventListener('input', updateButtonStates);
        resetBtn.addEventListener('click', () => {
            originalText.value = '';
            newText.value = '';
            updateButtonStates();
            comparisonResults.classList.add('hidden');
        });
        swapBtn.addEventListener('click', swapTexts);
        compareBtn.addEventListener('click', compareTexts);

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', () => {
            updateButtonStates();
            
            // Add animation to elements when they come into view
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate-fade-up');
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.neu-card').forEach(card => {
                observer.observe(card);
            });
        });
    </script>
</body>
</html>